<label class="toggle-control">
  <input type="checkbox" checked="checked">
  <span class="control"></span>
</label>



/* Follow me for more pens like this! */

/*
  Note: This demo could have easily been written in vanilla CSS.
  The reason I opted into using SCSS, was just so that I could
  enable easy customization for you, the viewer.

  If you want to use this control in your own project as vanilla CSS;
  customize the variables to whatever you'd like, and then click on the
  down arrow button in the top right of this CSS editor and then select
  "View Compiled CSS".
*/

// Tweak these to change the style of the toggle
$toggle-background-color-on: dodgerblue;
$toggle-background-color-off: darkgray;
$toggle-control-color: white;
$toggle-width: 100px;
$toggle-height: 50px;
$toggle-gutter: 5px;
$toggle-radius: 50%;
$toggle-control-speed: .15s;
$toggle-control-ease: ease-in;

// These are our computed variables
// change at your own risk.
$toggle-radius: $toggle-height / 2;
$toggle-control-size: $toggle-height - ($toggle-gutter * 2);

.toggle-control {
  display: block;
  position: relative;
  padding-left: $toggle-width;
  margin-bottom: 12px;
  cursor: pointer;
  font-size: 22px;
  user-select: none;

  input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
  }

  input:checked ~ .control {
    background-color: $toggle-background-color-on;
    &:before{
       content: "yes";
      justify-content: flex-start;
      margin-left:1rem;
    }
    &:after {
      left: $toggle-width - $toggle-control-size - $toggle-gutter;
    }
  }

  .control {
    position: absolute;
    top: 0;
    left: 0;
    height: $toggle-height;
    width: $toggle-width;
    border-radius: $toggle-radius;
    background-color: $toggle-background-color-off;
    transition: background-color $toggle-control-speed $toggle-control-ease;
    &:before{
       content: "no";
       display:flex;
      justify-content: flex-end;
      align-items: center;
      height:100%;
      margin-right:1rem;
    }
    &:after {
      content: "";
      position: absolute;
      left: $toggle-gutter;
      top: $toggle-gutter;
      width: $toggle-control-size;
      height: $toggle-control-size;
      border-radius: $toggle-radius;
      background: $toggle-control-color;
      transition: left $toggle-control-speed $toggle-control-ease;
    }
  }
}

/* Center the control */
body {
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
  background-color: #222229;
  color: white;
}
---------------------
---Without variable---
----------------------
<label class="toggle-control">
  <input type="checkbox" checked="checked">
  <span class="control"></span>
</label>

---------------------------
---------------------------

.toggle-control {
  display: block;
  position: relative;
  padding-left: 100px;
  margin-bottom: 12px;
  cursor: pointer;
  font-size: 22px;
  user-select: none;

  input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
  }

  input:checked ~ .control {
    background-color: dodgerblue;
    &:before{
       content: "yes";
      justify-content: flex-start;
      margin-left:1rem;
    }
    &:after {
      left: calc(100px - (50px - (6px * 2)) - 6px);
    }
  }

  .control {
    position: absolute;
    top: 0;
    left: 0;
    height: 50px;
    width: 100px;
    border-radius: 50px;
    background-color: darkgray;
    transition: background-color .15s ease-in;
    &:before{
       content: "no";
       display:flex;
      justify-content: flex-end;
      align-items: center;
      height:100%;
      margin-right:1rem;
    }
    &:after {
      content: "";
      position: absolute;
      left: 6px;
      top: 6px;
      width: calc(50px - (6px *2));
      height: calc(50px - (6px *2));
      border-radius: 50%;
      background: #fff;
      transition: left .15s ease-in;
    }
  }
}



//


import React, { useState } from "react";
import styled from "styled-components";
/**
 * Ceci est mon premiers composant documenter dans une stories ='D
 *
 * ## Composant
 *
 * ```jsx
 * <ToggleSwitch></ToggleSwitch>
 * ```
 * ## AperÃ§u
 */

const ToggleSwitch = () => {
  const [toggle, setToggle] = useState(false);
  const onToggle = () => {
    setToggle(!toggle);
  };
console.log(toggle);

      
const SwitchButton = styled.div`
  position: absolute;
  height: 50px;
  width: 100px;
  border-radius: 50px;
  background-color: ${toggle ? 'dodgerblue' : 'darkgray'};
  cursor: pointer;

  transition: background-color .15s ease-in;
  &:before{
    content: ${toggle ? '"yes"' : '"no"'};
    display:flex;
    justify-content: ${toggle ? 'flex-start' : 'flex-end'};
    align-items: center;
    height:100%;
    margin: ${toggle ? '0 0 0 1rem' : '0 1rem 0 0'};
  }
  &:after {
    content: "";
    position: absolute;
    left: ${toggle ? 'calc(100px - (50px - (5px * 2)) - 5px)' : '5px'};
    top: 5px;
    width: calc(50px - (5px * 2));
    height: calc(50px - (5px * 2));
    border-radius: 50%;
    background: white;
    transition: left .15s ease-in;
  }
`;
  return (
  
    <SwitchButton onClick={onToggle}/>
  
  );
};


export default ToggleSwitch;
